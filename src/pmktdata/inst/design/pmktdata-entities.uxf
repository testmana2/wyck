<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
// fontsize=14
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Cmd to select multiple elements
// Use Cmd+mouse to select via lasso
//
// Use +/- or Cmd+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Cmd+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text 
will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>312</x>
      <y>16</y>
      <w>368</w>
      <h>680</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Mldata&gt;&gt;
Package::pmktdata
{principal package object}
--
idata:list
-imetadata:data.frame
-groupsordered:char
-dataprovider:char
-curmktidx:int
-mode:char
-dseq=:POSIXct
-enddate:POSIXct
-cdate:POSIXct
-histd1:int
-histh1:int
--
--constr
--
+instrlistdatacsv(csvfile:char,..):Mldata
+instrlistdata(instrvec:char,..):Mldata
--
--getters setters
--
+getCinstrument(o:Mldata):char
+getInstrumentLabel(o:Mldata:iname:char):char
+getSortedinstruments(o:Mldata):vector
+setInstrumentPosition(o:Mldata,pos:char):void
+setSpecificInstrumentPosition(o:Mldata,idnam:char):void
+{get/set}Mode(o:Mldata,..)
+{get/set}Cdate(o:Mldata,..)
+{get/set}Groups(o:Mldata,..)
+getCdatedata(o:Mldata,iname:char,tfvalue:char):Xts
+getcd1(o:Mldata):Xts
+getcw1(o:Mldata):Xts
+setInterdayTZ(o:Mldata,tz:char)
+getInterdayTZ(o:Mldata)
--
--load data func
--
+iniDataDld(o:Mldata,sdate:POSIXct)
+updDataDld(o:Mldata):void
+fetchNextDay(o:Mldata,n:int)
+fetchNextWeek(o:Mldata)
+iniDataContracts(o:Mldata,rollon:char,..)
+loadUp2dateContracts(o:Mldata,..)
+updDataContracts(o:Mldata,..)
--
--misc funcs
--
+insertGroup(o:Mldata,grp:char,pos:int):void
+removeDatatail(o:Mldata,rmd:bool,..)
+addMarketdata(o:Mldata,name:char,..)
+rmMarketdata(o:Mldata,name:char,..)
+printIdatMeta(o:Mldat,name:char,..)
+getIdatMetaRolls(o:Mldata,name:char):list
+getIdatMetaFrontcontract(o:Mldata,name:char,ctime:POSIXct):list
+getIdatMetaRollcrit(o:Mldata,name:char):char
+appendIntraDayInfo(o:MLdata):data.frame
+show(o:Mldata)
+is.Mldata(o:Mldata)
--
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>80</x>
      <y>16</y>
      <w>144</w>
      <h>304</h>
    </coordinates>
    <panel_attributes>Struct
{element of idata}
--
+name:char
+dtype:char
+d1:xts
+w1:xts
+meta:list{
splits:xts
dividends:xts
interdaytimezone:char
intradaytimezone:char
rollon:char
volccount:int
gluedcontracts:list{
cfmonth:char
c2month:char
c3month:char
cfexpir:char
datasub:char
}}
+intraday:list
{element:list{
freq:char
data:xts
}}
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>200</x>
      <y>136</y>
      <w>128</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-
m1=n
r1=idata</panel_attributes>
    <additional_attributes>24;24;112;64</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>112</x>
      <y>344</y>
      <w>136</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Struct
{imetadata data frame}
--
IDNAM:char
TKR:char
TYP:char
LBL:char
grp:char</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>224</x>
      <y>280</y>
      <w>104</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=-
m1=n
r1=imetadata</panel_attributes>
    <additional_attributes>24;72;88;24</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1104</x>
      <y>24</y>
      <w>360</w>
      <h>1024</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ContractSeq&gt;&gt;
Package::pmktdata
{futures contracts}
--
+instName:char
+tickerPref:char
+contSuff:char
+yrContracts:int
+topstoredir:char
+offsetd1fixed:int
+datasrc:char
+lastDataDaily:POSIXct
+cslogger:char
+contrseq:data.frame
+contrefdata:list
+data:list
+intrdconf:list
+intrdata:list
+tkdata:list
+rollrule:list
--
--constr
--
+crBareContractSeq(name:char,..):ContractSeq
+loadseq(rdatfile:char):ContractSeq
+readcs(name:char,topstoredir:char):ContractSeq
+nreadcs(name:char,topstoredir:char,..):ContractSeq
+csfromcfg(fname:char, cfgdir:char):ContractSeq
--
--getters setters
--
+getInstrumentName(o:ContractSeq):char
+getTickerPref(o:ContractSeq):char
+getLoggername(o:ContractSeq):char
+{get/set}Topstoredir(o:ContractSeq,..)
+setRollrule(o:ContractSeq:value:list)
+setRegularRollRule(o:ContractSeq,rollprd:int,fmvolpct:float)
+resetLogger(o:ConractSeq,level:char)
+getD1offset(o:ConractSeq):int
+{get/set}ContractSequence(o:ContractSeq,..)
+getContract(o:ContractSeq:month:char):Contract
+getUnexpiredContract(o:ContractSeq,ctime:POSIXct,n:int):char
+getUnexpiredExpectedExpiry(o:ContractSeq,ctime:POSIXct,n:int):char
+getIntraIntervalDataIndex(o:ContractSeq,interval:int):int
+getIntraIntervalData(o:ContractSeq,interval:int):xts
+getLastQuoteDatePosix(o:ContractSeq)
+setRefContIntradaySerie(o:ContractSeq,rollon:char)
+getRefContserie(o:ContractSeq,freq:int)
+getGluedsequence(o:ContractSeq:stime:POSIXct,etime:POSIXct,..)
+getGluedserie(o:ContractSeq:stime:POSIXct,etime:POSIXct,..):xts
--
--misc funcs
--
+dtnConf(env:char)
+mkContractChain(yrstart:char,yrend:char,..):vector
+cshelp(o:ContractSeq)
+show(o:ContractSeq)
+showcur(o:ContractSeq,ctime:POSIXct)
--
-- check funcs
--
+printLiquidity(o:ContractSeq,ctime:POSIXct,n:int)
+chkprintEODroll(o:ContractSeq,ctime:POSIXct,n:int)
+chkMeta(o:ContractSEq)
+chkData(o:ContractSEq)
+sanityCheckMeta(o:ContractSeq)
--
-- config mgmt funcs
--
+findRollonvol(o:ContractSeq,ctime:POSIXct,..)
+fillExpiries(o:ContractSeq,kkeys:char)

--
-- data mgmt funcs
--
+addFutureContracts(o:ContractSeq,n:int)
+updateMeta(o:ContractSeq,ctime:POSIXct,persist:bool)
+updateRollonvol(o:ContractSeq,ctime:POSIXct)
+updateDataExpiries(o:ContractSeq)
+fixMetafromcsv(o:ContractSeq,persist:bool)
+iniDownload(o:ContractSeq,lstqtime:POSIXct,..)
+iniDownloadIntra(o:ContractSeq,lstqtime:POSIXct,..)
+loadIntraday(o:ContractSeq,interval:int,..)
+updateEOD(o:ContractSeq,scontract:char,ctime:POSIXct,..)
+updateIntra(o:ContractSeq,scontract:char,lstqtime:POSIXct,..)
+toPrdIntra(o:ContractSeq,sinerval:int,tointerval:int)
+allPrdIntra(o:ContractSeq,contracts:vector)
+persistSeq(o:ContractSeq)
+persistIntra(o:ContractSeq:interval:int)

bg=yellow
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>0</x>
      <y>472</y>
      <w>288</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>&lt;&lt;MldataDtn&gt;&gt;
{impl for DTN data}
--
+loadDataContractsDTN(o:Mldata,rollon:char,..)
+updDataContractsDTN(o:Mldata,rollon:char,..)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>672</x>
      <y>704</y>
      <w>392</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ContrcactSeqDtn&gt;&gt;
Package::pmktdata
{implementation for DTN data}
--
+iniDownloadDTN(o:ContractSEq,lstqtime:POSIXct)
+iniDownloadIntraDTN(o:ContractSEq,lstqtime:POSIXct,interval:int,..)
+updateEODDTN(o:ContractSEq,scontract:char,ctime:POSIXct)
+updateIntraDTN(o:ContractSEq,lstqtime:POSIXct,interval:int,..)

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>824</x>
      <y>648</y>
      <w>296</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>24;56;280;24</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>264</x>
      <y>392</y>
      <w>64</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>24;112;48;24</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1504</x>
      <y>80</y>
      <w>136</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Struct
{element of data}
--
+ticker:char
+month:char
+expiry:char
+d1start:char
+d1end:char
+bd1:xts
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1440</x>
      <y>0</y>
      <w>80</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=-
m1=n
r1=data</panel_attributes>
    <additional_attributes>64;120;24;24</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1536</x>
      <y>272</y>
      <w>136</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>Struct
{element of intrdata}
--
+ticker:char
+month:char
+idat:list{
  +freq:char
  +dtstart:char
  +dtstop:char
  +xdat:xts
}
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1440</x>
      <y>184</y>
      <w>112</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=-
m1=n
r1=intrdata</panel_attributes>
    <additional_attributes>96;88;24;24</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>704</x>
      <y>24</y>
      <w>392</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>&lt;&lt;ContractSeqList&gt;&gt;
Package::pmktdata
{helper object for list of contract seqs}
--
-csl:list
-topstoredir:char
-loggername:char
--
--constr
--
+nreadCSL(ivec:vector,topstoredir:char,freq:in..):ContractSeqList
+readCSL(topstoredir:char):ContractSeqList
--
--getters setters
--
+getInstrument(o:ContractSeqList):vector
+setLogger(o:contractSeqList):void
+{get/set}CS(o:ContractSEqList,cs:ContractSeq)
--
--data mgmt  func
--
+updEOD(o:ContractSeqList,ctime:POSIXct,updMeta:bool,persist:bool)
+updIntra(o:ContractSeqList,ctime:POSIXct,interval:int,mofirst:bool,..)
+storecsl(o:ContractSeqList)
+storeIntracsl(o:ContractSeqList,interval:int)
--
--misc funcs
--
+lstliq(o:ContractSeqList,ctime:POSIXct)
+lstcur(o:ContractSeqList,ctime:POSIXct
+show(o:ContractSeqList)
+is.ContractSeqList(o:ContractSeqList)

bg=pink
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1008</x>
      <y>320</y>
      <w>112</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=-
m1=n
r1=csl</panel_attributes>
    <additional_attributes>96;136;24;24</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>1496</x>
      <y>448</y>
      <w>160</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>Struct v.2
{element of intrdconf}
--
+intradayfreq:vector(numeric)
+daydoublevolume:bool
+outcrytimezone:char
+tick_size:double
+tick_price:double
+imnt_currency:char</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>1440</x>
      <y>256</y>
      <w>78</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>lt=-
m1=n
r1=intrdconf</panel_attributes>
    <additional_attributes>56;192;24;24</additional_attributes>
  </element>
</diagram>
